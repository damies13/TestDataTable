<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on darwin)" generated="20191219 18:58:18.509" rpa="false">
<suite id="s1" name="TestDataTable-API" source="/Users/dave/Documents/GitHub/TestDataTable/Regression_Tests/TestDataTable-API.robot">
<test id="s1-t1" name="Create Table regression 1">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.763" endtime="20191219 18:58:18.804"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:18.805" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:18.774553+00:00",
            "local": "2019-12-19T18:58:18.774553+10:00"
        }
    },
    "response": {
        "seconds": 0.004861,
        "status": 201,
        "body": {
            "message": "table regression 1 created"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:18 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:18.805" endtime="20191219 18:58:18.812"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.812" endtime="20191219 18:58:18.813"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.message</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20191219 18:58:18.842" level="INFO">
"table regression 1 created"</msg>
<msg timestamp="20191219 18:58:18.842" level="INFO">${msg} = table regression 1 created</msg>
<status status="PASS" starttime="20191219 18:58:18.813" endtime="20191219 18:58:18.842"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${msg}"</arg>
<arg>"table regression 1 created"</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.843" endtime="20191219 18:58:18.843"></status>
</kw>
<status status="PASS" starttime="20191219 18:58:18.762" endtime="20191219 18:58:18.843" critical="yes"></status>
</test>
<test id="s1-t2" name="Show Tables">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/tables</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.843" endtime="20191219 18:58:18.852"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:18.852" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/tables",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/tables",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:18.851136+00:00",
            "local": "2019-12-19T18:58:18.851136+10:00"
        }
    },
    "response": {
        "seconds": 0.0053170000000000005,
        "status": 200,
        "body": {
            "tables": [
                {
                    "id": 1,
                    "table": "Test"
                },
                {
                    "id": 2,
                    "table": "Test_2"
                },
                {
                    "id": 24,
                    "table": "regression 1"
                }
            ]
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:18 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:18.852" endtime="20191219 18:58:18.853"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.853" endtime="20191219 18:58:18.854"></status>
</kw>
<status status="PASS" starttime="20191219 18:58:18.843" endtime="20191219 18:58:18.854" critical="yes"></status>
</test>
<test id="s1-t3" name="Table regression 1 exists">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/tables</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.854" endtime="20191219 18:58:18.862"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:18.862" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/tables",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/tables",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:18.861240+00:00",
            "local": "2019-12-19T18:58:18.861240+10:00"
        }
    },
    "response": {
        "seconds": 0.004677,
        "status": 200,
        "body": {
            "tables": [
                {
                    "id": 1,
                    "table": "Test"
                },
                {
                    "id": 2,
                    "table": "Test_2"
                },
                {
                    "id": 24,
                    "table": "regression 1"
                }
            ]
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:18 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:18.862" endtime="20191219 18:58:18.864"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.864" endtime="20191219 18:58:18.864"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.tables[?(@.table=="regression 1")].id</arg>
</arguments>
<assign>
<var>${tbl_id}</var>
</assign>
<msg timestamp="20191219 18:58:18.885" level="INFO">
24</msg>
<msg timestamp="20191219 18:58:18.885" level="INFO">${tbl_id} = 24</msg>
<status status="PASS" starttime="20191219 18:58:18.864" endtime="20191219 18:58:18.886"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.tables[?(@.table=="regression 1")].table</arg>
</arguments>
<assign>
<var>${tbl_name}</var>
</assign>
<msg timestamp="20191219 18:58:18.907" level="INFO">
"regression 1"</msg>
<msg timestamp="20191219 18:58:18.907" level="INFO">${tbl_name} = regression 1</msg>
<status status="PASS" starttime="20191219 18:58:18.886" endtime="20191219 18:58:18.907"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${tbl_name}"</arg>
<arg>"regression 1"</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.907" endtime="20191219 18:58:18.908"></status>
</kw>
<status status="PASS" starttime="20191219 18:58:18.854" endtime="20191219 18:58:18.908" critical="yes"></status>
</test>
<test id="s1-t4" name="Create Table regression 1 again">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.908" endtime="20191219 18:58:18.915"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:18.916" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:18.914565+00:00",
            "local": "2019-12-19T18:58:18.914565+10:00"
        }
    },
    "response": {
        "seconds": 0.004357000000000001,
        "status": 200,
        "body": {
            "message": "table regression 1 exists"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:18 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:18.915" endtime="20191219 18:58:18.916"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.917" endtime="20191219 18:58:18.917"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.message</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20191219 18:58:18.939" level="INFO">
"table regression 1 exists"</msg>
<msg timestamp="20191219 18:58:18.940" level="INFO">${msg} = table regression 1 exists</msg>
<status status="PASS" starttime="20191219 18:58:18.917" endtime="20191219 18:58:18.940"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${msg}"</arg>
<arg>"table regression 1 exists"</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.940" endtime="20191219 18:58:18.940"></status>
</kw>
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/tables</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.940" endtime="20191219 18:58:18.948"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.948" endtime="20191219 18:58:18.949"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.tables[?(@.table=="regression 1")].table</arg>
</arguments>
<assign>
<var>${tbl_name}</var>
</assign>
<msg timestamp="20191219 18:58:18.971" level="INFO">
"regression 1"</msg>
<msg timestamp="20191219 18:58:18.971" level="INFO">${tbl_name} = regression 1</msg>
<status status="PASS" starttime="20191219 18:58:18.949" endtime="20191219 18:58:18.971"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${tbl_name}"</arg>
<arg>"regression 1"</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.971" endtime="20191219 18:58:18.972"></status>
</kw>
<status status="PASS" starttime="20191219 18:58:18.908" endtime="20191219 18:58:18.972" critical="yes"></status>
</test>
<test id="s1-t5" name="Create Column Col_A">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.972" endtime="20191219 18:58:18.982"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:18.983" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1/Col_A",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_A",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:18.981764+00:00",
            "local": "2019-12-19T18:58:18.981764+10:00"
        }
    },
    "response": {
        "seconds": 0.007304000000000001,
        "status": 201,
        "body": {
            "message": "column Col_A created"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:18 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:18.983" endtime="20191219 18:58:18.984"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:18.984" endtime="20191219 18:58:18.985"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.message</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20191219 18:58:19.009" level="INFO">
"column Col_A created"</msg>
<msg timestamp="20191219 18:58:19.009" level="INFO">${msg} = column Col_A created</msg>
<status status="PASS" starttime="20191219 18:58:18.985" endtime="20191219 18:58:19.009"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${msg}"</arg>
<arg>"column Col_A created"</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.009" endtime="20191219 18:58:19.010"></status>
</kw>
<status status="PASS" starttime="20191219 18:58:18.972" endtime="20191219 18:58:19.010" critical="yes"></status>
</test>
<test id="s1-t6" name="Create Column Col_A again">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.011" endtime="20191219 18:58:19.021"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:19.021" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1/Col_A",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_A",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:19.020204+00:00",
            "local": "2019-12-19T18:58:19.020204+10:00"
        }
    },
    "response": {
        "seconds": 0.006972000000000001,
        "status": 200,
        "body": {
            "message": "column Col_A exists"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:19 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:19.021" endtime="20191219 18:58:19.022"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.023" endtime="20191219 18:58:19.023"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.message</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20191219 18:58:19.046" level="INFO">
"column Col_A exists"</msg>
<msg timestamp="20191219 18:58:19.046" level="INFO">${msg} = column Col_A exists</msg>
<status status="PASS" starttime="20191219 18:58:19.023" endtime="20191219 18:58:19.046"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${msg}"</arg>
<arg>"column Col_A exists"</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.046" endtime="20191219 18:58:19.046"></status>
</kw>
<status status="PASS" starttime="20191219 18:58:19.010" endtime="20191219 18:58:19.046" critical="yes"></status>
</test>
<test id="s1-t7" name="Create Column Col_B and Col_C">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_B</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.047" endtime="20191219 18:58:19.056"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:19.056" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1/Col_B",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_B",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:19.055293+00:00",
            "local": "2019-12-19T18:58:19.055293+10:00"
        }
    },
    "response": {
        "seconds": 0.0065780000000000005,
        "status": 201,
        "body": {
            "message": "column Col_B created"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:19 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:19.056" endtime="20191219 18:58:19.057"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.057" endtime="20191219 18:58:19.058"></status>
</kw>
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_C</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.058" endtime="20191219 18:58:19.066"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:19.066" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1/Col_C",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_C",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:19.065310+00:00",
            "local": "2019-12-19T18:58:19.065310+10:00"
        }
    },
    "response": {
        "seconds": 0.006041,
        "status": 201,
        "body": {
            "message": "column Col_C created"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:19 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:19.066" endtime="20191219 18:58:19.067"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.067" endtime="20191219 18:58:19.068"></status>
</kw>
<status status="PASS" starttime="20191219 18:58:19.047" endtime="20191219 18:58:19.068" critical="yes"></status>
</test>
<test id="s1-t8" name="Post row of data">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/row</arg>
<arg>{"Col_A":"Value A","Col_B":"Value B","Col_C":"Value C"}</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.069" endtime="20191219 18:58:19.074"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:19.075" level="INFO">
{
    "request": {
        "method": "POST",
        "url": "http://localhost/regression+1/row",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/row",
        "query": {},
        "body": {
            "Col_A": "Value A",
            "Col_B": "Value B",
            "Col_C": "Value C"
        },
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:19.073762+00:00",
            "local": "2019-12-19T18:58:19.073762+10:00"
        }
    },
    "response": {
        "seconds": 0.0029649999999999998,
        "status": 200,
        "body": {
            "path": "/regression+1/row"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:19 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:19.074" endtime="20191219 18:58:19.076"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191219 18:58:19.077" level="FAIL">200 is not one of [201]

Failed validating 'enum' in schema:
    {'enum': [201], 'type': 'number'}

On instance:
    200</msg>
<status status="FAIL" starttime="20191219 18:58:19.076" endtime="20191219 18:58:19.077"></status>
</kw>
<status status="FAIL" starttime="20191219 18:58:19.068" endtime="20191219 18:58:19.078" critical="yes">200 is not one of [201]

Failed validating 'enum' in schema:
    {'enum': [201], 'type': 'number'}

On instance:
    200</status>
</test>
<test id="s1-t9" name="Get Table regression 1">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/regression+1</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.078" endtime="20191219 18:58:19.085"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:19.085" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/regression+1",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:19.084346+00:00",
            "local": "2019-12-19T18:58:19.084346+10:00"
        }
    },
    "response": {
        "seconds": 0.004236,
        "status": 404,
        "body": "",
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:19 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:19.085" endtime="20191219 18:58:19.086"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191219 18:58:19.087" level="FAIL">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</msg>
<status status="FAIL" starttime="20191219 18:58:19.086" endtime="20191219 18:58:19.087"></status>
</kw>
<status status="FAIL" starttime="20191219 18:58:19.078" endtime="20191219 18:58:19.087" critical="yes">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</status>
</test>
<test id="s1-t10" name="Get Table regression 1 columns">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/columns</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.088" endtime="20191219 18:58:19.096"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:19.096" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/regression+1/columns",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/columns",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:19.095232+00:00",
            "local": "2019-12-19T18:58:19.095232+10:00"
        }
    },
    "response": {
        "seconds": 0.005226,
        "status": 404,
        "body": "",
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:19 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:19.096" endtime="20191219 18:58:19.097"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191219 18:58:19.098" level="FAIL">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</msg>
<status status="FAIL" starttime="20191219 18:58:19.097" endtime="20191219 18:58:19.098"></status>
</kw>
<status status="FAIL" starttime="20191219 18:58:19.087" endtime="20191219 18:58:19.098" critical="yes">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</status>
</test>
<test id="s1-t11" name="Get Table regression 1 row">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/row</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.099" endtime="20191219 18:58:19.105"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:19.106" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/regression+1/row",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/row",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:19.105115+00:00",
            "local": "2019-12-19T18:58:19.105115+10:00"
        }
    },
    "response": {
        "seconds": 0.0044989999999999995,
        "status": 404,
        "body": "",
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:19 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:19.106" endtime="20191219 18:58:19.107"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191219 18:58:19.107" level="FAIL">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</msg>
<status status="FAIL" starttime="20191219 18:58:19.107" endtime="20191219 18:58:19.108"></status>
</kw>
<status status="FAIL" starttime="20191219 18:58:19.098" endtime="20191219 18:58:19.108" critical="yes">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</status>
</test>
<test id="s1-t12" name="Delete Column Col_C">
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_C</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.108" endtime="20191219 18:58:19.119"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:19.120" level="INFO">
{
    "request": {
        "method": "DELETE",
        "url": "http://localhost/regression+1/Col_C",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_C",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:19.118854+00:00",
            "local": "2019-12-19T18:58:19.118854+10:00"
        }
    },
    "response": {
        "seconds": 0.007940000000000001,
        "status": 500,
        "body": {
            "path": "ParseResult(scheme='', netloc='', path='/regression+1/Col_C', params='', query='', fragment='')",
            "message": "Unsupported method"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:19 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:19.120" endtime="20191219 18:58:19.121"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191219 18:58:19.122" level="FAIL">500 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    500</msg>
<status status="FAIL" starttime="20191219 18:58:19.121" endtime="20191219 18:58:19.122"></status>
</kw>
<status status="FAIL" starttime="20191219 18:58:19.108" endtime="20191219 18:58:19.122" critical="yes">500 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    500</status>
</test>
<test id="s1-t13" name="Get Column Col_A">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.123" endtime="20191219 18:58:19.130"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:19.130" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/regression+1/Col_A",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_A",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:19.129483+00:00",
            "local": "2019-12-19T18:58:19.129483+10:00"
        }
    },
    "response": {
        "seconds": 0.004378,
        "status": 404,
        "body": "",
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:19 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:19.130" endtime="20191219 18:58:19.131"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191219 18:58:19.132" level="FAIL">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</msg>
<status status="FAIL" starttime="20191219 18:58:19.131" endtime="20191219 18:58:19.132"></status>
</kw>
<status status="FAIL" starttime="20191219 18:58:19.123" endtime="20191219 18:58:19.133" critical="yes">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</status>
</test>
<test id="s1-t14" name="Add value to Column Col_A">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A/Value+1</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.133" endtime="20191219 18:58:19.139"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:19.139" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1/Col_A/Value+1",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_A/Value+1",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:19.138173+00:00",
            "local": "2019-12-19T18:58:19.138173+10:00"
        }
    },
    "response": {
        "seconds": 0.002863,
        "status": 500,
        "body": {
            "path": "/regression+1/Col_A/Value+1",
            "message": "Unsupported method"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:19 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:19.139" endtime="20191219 18:58:19.140"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191219 18:58:19.141" level="FAIL">500 is not one of [201]

Failed validating 'enum' in schema:
    {'enum': [201], 'type': 'number'}

On instance:
    500</msg>
<status status="FAIL" starttime="20191219 18:58:19.140" endtime="20191219 18:58:19.141"></status>
</kw>
<status status="FAIL" starttime="20191219 18:58:19.133" endtime="20191219 18:58:19.141" critical="yes">500 is not one of [201]

Failed validating 'enum' in schema:
    {'enum': [201], 'type': 'number'}

On instance:
    500</status>
</test>
<test id="s1-t15" name="Add more values to Column Col_A">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A/Value+2</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.141" endtime="20191219 18:58:19.146"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191219 18:58:19.146" level="FAIL">500 is not one of [201]

Failed validating 'enum' in schema:
    {'enum': [201], 'type': 'number'}

On instance:
    500</msg>
<status status="FAIL" starttime="20191219 18:58:19.146" endtime="20191219 18:58:19.147"></status>
</kw>
<status status="FAIL" starttime="20191219 18:58:19.141" endtime="20191219 18:58:19.147" critical="yes">500 is not one of [201]

Failed validating 'enum' in schema:
    {'enum': [201], 'type': 'number'}

On instance:
    500</status>
</test>
<test id="s1-t16" name="Get all values for Column Col_A">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.147" endtime="20191219 18:58:19.155"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:19.156" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/regression+1/Col_A",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_A",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:19.154857+00:00",
            "local": "2019-12-19T18:58:19.154857+10:00"
        }
    },
    "response": {
        "seconds": 0.005339,
        "status": 404,
        "body": "",
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:19 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:19.156" endtime="20191219 18:58:19.157"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191219 18:58:19.158" level="FAIL">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</msg>
<status status="FAIL" starttime="20191219 18:58:19.157" endtime="20191219 18:58:19.158"></status>
</kw>
<status status="FAIL" starttime="20191219 18:58:19.147" endtime="20191219 18:58:19.158" critical="yes">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</status>
</test>
<test id="s1-t17" name="Get value by id from Column Col_A">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A/${id}</arg>
</arguments>
<msg timestamp="20191219 18:58:19.159" level="FAIL">Variable '${id}' not found.</msg>
<status status="FAIL" starttime="20191219 18:58:19.158" endtime="20191219 18:58:19.159"></status>
</kw>
<status status="FAIL" starttime="20191219 18:58:19.158" endtime="20191219 18:58:19.159" critical="yes">Variable '${id}' not found.</status>
</test>
<test id="s1-t18" name="Delete Table regression 1">
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>/regression+1</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.159" endtime="20191219 18:58:19.173"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:19.174" level="INFO">
{
    "request": {
        "method": "DELETE",
        "url": "http://localhost/regression+1",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:19.172728+00:00",
            "local": "2019-12-19T18:58:19.172728+10:00"
        }
    },
    "response": {
        "seconds": 0.011465,
        "status": 200,
        "body": {
            "message": "table regression 1 deleted"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:19 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:19.174" endtime="20191219 18:58:19.175"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.176" endtime="20191219 18:58:19.176"></status>
</kw>
<status status="PASS" starttime="20191219 18:58:19.159" endtime="20191219 18:58:19.177" critical="yes"></status>
</test>
<test id="s1-t19" name="Table regression 1 removed">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/tables</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.178" endtime="20191219 18:58:19.186"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 18:58:19.186" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/tables",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/tables",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T08:58:19.184982+00:00",
            "local": "2019-12-19T18:58:19.184982+10:00"
        }
    },
    "response": {
        "seconds": 0.0049640000000000005,
        "status": 200,
        "body": {
            "tables": [
                {
                    "id": 1,
                    "table": "Test"
                },
                {
                    "id": 2,
                    "table": "Test_2"
                }
            ]
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 08:58:19 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 18:58:19.186" endtime="20191219 18:58:19.188"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.188" endtime="20191219 18:58:19.188"></status>
</kw>
<kw name="Missing" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field does not exist.*</doc>
<arguments>
<arg>$.tables[?(@.table=="regression 1")]</arg>
</arguments>
<status status="PASS" starttime="20191219 18:58:19.189" endtime="20191219 18:58:19.212"></status>
</kw>
<status status="PASS" starttime="20191219 18:58:19.177" endtime="20191219 18:58:19.213" critical="yes"></status>
</test>
<status status="FAIL" starttime="20191219 18:58:18.511" endtime="20191219 18:58:19.213"></status>
</suite>
<statistics>
<total>
<stat pass="9" fail="10">Critical Tests</stat>
<stat pass="9" fail="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="9" fail="10" id="s1" name="TestDataTable-API">TestDataTable-API</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
