<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on darwin)" generated="20191220 08:30:37.207" rpa="false">
<suite id="s1" name="TestDataTable-API REST &amp; TestDataTable-API requests">
<suite id="s1-s1" name="TestDataTable-API REST" source="/Users/dave/Documents/GitHub/TestDataTable/Regression_Tests/TestDataTable-API_REST.robot">
<test id="s1-s1-t1" name="Create Table regression 1">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.645" endtime="20191220 08:30:37.697"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:37.698" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:37.659739+00:00",
            "local": "2019-12-20T08:30:37.659739+10:00"
        }
    },
    "response": {
        "seconds": 0.00587,
        "status": 201,
        "body": {
            "message": "table regression 1 created"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:37 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:37.698" endtime="20191220 08:30:37.713"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.713" endtime="20191220 08:30:37.714"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.message</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20191220 08:30:37.741" level="INFO">
"table regression 1 created"</msg>
<msg timestamp="20191220 08:30:37.741" level="INFO">${msg} = table regression 1 created</msg>
<status status="PASS" starttime="20191220 08:30:37.714" endtime="20191220 08:30:37.741"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${msg}"</arg>
<arg>"table regression 1 created"</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.741" endtime="20191220 08:30:37.742"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:37.645" endtime="20191220 08:30:37.742" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Show Tables">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/tables</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.743" endtime="20191220 08:30:37.752"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:37.752" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/tables",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/tables",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:37.751466+00:00",
            "local": "2019-12-20T08:30:37.751466+10:00"
        }
    },
    "response": {
        "seconds": 0.005986,
        "status": 200,
        "body": {
            "tables": [
                {
                    "id": 1,
                    "table": "Test"
                },
                {
                    "id": 2,
                    "table": "Test_2"
                },
                {
                    "id": 63,
                    "table": "regression 1"
                }
            ]
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:37 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:37.752" endtime="20191220 08:30:37.754"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.754" endtime="20191220 08:30:37.754"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:37.742" endtime="20191220 08:30:37.754" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Table regression 1 exists">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/tables</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.755" endtime="20191220 08:30:37.762"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:37.763" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/tables",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/tables",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:37.761781+00:00",
            "local": "2019-12-20T08:30:37.761781+10:00"
        }
    },
    "response": {
        "seconds": 0.0049889999999999995,
        "status": 200,
        "body": {
            "tables": [
                {
                    "id": 1,
                    "table": "Test"
                },
                {
                    "id": 2,
                    "table": "Test_2"
                },
                {
                    "id": 63,
                    "table": "regression 1"
                }
            ]
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:37 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:37.762" endtime="20191220 08:30:37.764"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.764" endtime="20191220 08:30:37.764"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.tables[?(@.table=="regression 1")].id</arg>
</arguments>
<assign>
<var>${tbl_id}</var>
</assign>
<msg timestamp="20191220 08:30:37.786" level="INFO">
63</msg>
<msg timestamp="20191220 08:30:37.786" level="INFO">${tbl_id} = 63</msg>
<status status="PASS" starttime="20191220 08:30:37.764" endtime="20191220 08:30:37.786"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.tables[?(@.table=="regression 1")].table</arg>
</arguments>
<assign>
<var>${tbl_name}</var>
</assign>
<msg timestamp="20191220 08:30:37.810" level="INFO">
"regression 1"</msg>
<msg timestamp="20191220 08:30:37.810" level="INFO">${tbl_name} = regression 1</msg>
<status status="PASS" starttime="20191220 08:30:37.786" endtime="20191220 08:30:37.810"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${tbl_name}"</arg>
<arg>"regression 1"</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.811" endtime="20191220 08:30:37.811"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:37.755" endtime="20191220 08:30:37.811" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Create Table regression 1 again">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.812" endtime="20191220 08:30:37.819"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:37.819" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:37.818535+00:00",
            "local": "2019-12-20T08:30:37.818535+10:00"
        }
    },
    "response": {
        "seconds": 0.004386,
        "status": 200,
        "body": {
            "message": "table regression 1 exists"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:37 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:37.819" endtime="20191220 08:30:37.820"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.820" endtime="20191220 08:30:37.821"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.message</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20191220 08:30:37.844" level="INFO">
"table regression 1 exists"</msg>
<msg timestamp="20191220 08:30:37.845" level="INFO">${msg} = table regression 1 exists</msg>
<status status="PASS" starttime="20191220 08:30:37.821" endtime="20191220 08:30:37.845"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${msg}"</arg>
<arg>"table regression 1 exists"</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.845" endtime="20191220 08:30:37.845"></status>
</kw>
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/tables</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.845" endtime="20191220 08:30:37.853"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.853" endtime="20191220 08:30:37.853"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.tables[?(@.table=="regression 1")].table</arg>
</arguments>
<assign>
<var>${tbl_name}</var>
</assign>
<msg timestamp="20191220 08:30:37.876" level="INFO">
"regression 1"</msg>
<msg timestamp="20191220 08:30:37.876" level="INFO">${tbl_name} = regression 1</msg>
<status status="PASS" starttime="20191220 08:30:37.853" endtime="20191220 08:30:37.876"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${tbl_name}"</arg>
<arg>"regression 1"</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.876" endtime="20191220 08:30:37.877"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:37.811" endtime="20191220 08:30:37.877" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Create Column Col_A">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.877" endtime="20191220 08:30:37.886"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:37.887" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1/Col_A",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_A",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:37.886014+00:00",
            "local": "2019-12-20T08:30:37.886014+10:00"
        }
    },
    "response": {
        "seconds": 0.00664,
        "status": 201,
        "body": {
            "message": "column Col_A created"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:37 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:37.887" endtime="20191220 08:30:37.888"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.888" endtime="20191220 08:30:37.888"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.message</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20191220 08:30:37.910" level="INFO">
"column Col_A created"</msg>
<msg timestamp="20191220 08:30:37.911" level="INFO">${msg} = column Col_A created</msg>
<status status="PASS" starttime="20191220 08:30:37.888" endtime="20191220 08:30:37.911"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${msg}"</arg>
<arg>"column Col_A created"</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.911" endtime="20191220 08:30:37.911"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:37.877" endtime="20191220 08:30:37.911" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Create Column Col_A again">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.912" endtime="20191220 08:30:37.920"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:37.921" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1/Col_A",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_A",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:37.919741+00:00",
            "local": "2019-12-20T08:30:37.919741+10:00"
        }
    },
    "response": {
        "seconds": 0.005898,
        "status": 200,
        "body": {
            "message": "column Col_A exists"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:37 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:37.920" endtime="20191220 08:30:37.922"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.922" endtime="20191220 08:30:37.922"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.message</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20191220 08:30:37.945" level="INFO">
"column Col_A exists"</msg>
<msg timestamp="20191220 08:30:37.945" level="INFO">${msg} = column Col_A exists</msg>
<status status="PASS" starttime="20191220 08:30:37.922" endtime="20191220 08:30:37.946"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${msg}"</arg>
<arg>"column Col_A exists"</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.946" endtime="20191220 08:30:37.946"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:37.912" endtime="20191220 08:30:37.946" critical="yes"></status>
</test>
<test id="s1-s1-t7" name="Create Column Col_B and Col_C">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_B</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.947" endtime="20191220 08:30:37.958"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:37.958" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1/Col_B",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_B",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:37.957218+00:00",
            "local": "2019-12-20T08:30:37.957218+10:00"
        }
    },
    "response": {
        "seconds": 0.008254,
        "status": 201,
        "body": {
            "message": "column Col_B created"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:37 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:37.958" endtime="20191220 08:30:37.959"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.960" endtime="20191220 08:30:37.960"></status>
</kw>
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_C</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.961" endtime="20191220 08:30:37.972"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:37.973" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1/Col_C",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_C",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:37.971820+00:00",
            "local": "2019-12-20T08:30:37.971820+10:00"
        }
    },
    "response": {
        "seconds": 0.008237999999999999,
        "status": 201,
        "body": {
            "message": "column Col_C created"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:37 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:37.973" endtime="20191220 08:30:37.974"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.974" endtime="20191220 08:30:37.975"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:37.946" endtime="20191220 08:30:37.975" critical="yes"></status>
</test>
<test id="s1-s1-t8" name="Post row of data">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/row</arg>
<arg>{"Col_A":"Value A","Col_B":"Value B","Col_C":"Value C"}</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.976" endtime="20191220 08:30:37.983"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:37.983" level="INFO">
{
    "request": {
        "method": "POST",
        "url": "http://localhost/regression+1/row",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/row",
        "query": {},
        "body": {
            "Col_A": "Value A",
            "Col_B": "Value B",
            "Col_C": "Value C"
        },
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:37.981886+00:00",
            "local": "2019-12-20T08:30:37.981886+10:00"
        }
    },
    "response": {
        "seconds": 0.003399,
        "status": 200,
        "body": {
            "path": "/regression+1/row"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:37 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:37.983" endtime="20191220 08:30:37.985"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191220 08:30:37.988" level="FAIL">200 is not one of [201]

Failed validating 'enum' in schema:
    {'enum': [201], 'type': 'number'}

On instance:
    200</msg>
<status status="FAIL" starttime="20191220 08:30:37.985" endtime="20191220 08:30:37.988"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:37.975" endtime="20191220 08:30:37.988" critical="yes">200 is not one of [201]

Failed validating 'enum' in schema:
    {'enum': [201], 'type': 'number'}

On instance:
    200</status>
</test>
<test id="s1-s1-t9" name="Get Table regression 1">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/regression+1</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:37.988" endtime="20191220 08:30:37.997"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:37.997" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/regression+1",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:37.996085+00:00",
            "local": "2019-12-20T08:30:37.996085+10:00"
        }
    },
    "response": {
        "seconds": 0.0056500000000000005,
        "status": 404,
        "body": "",
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:37 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:37.997" endtime="20191220 08:30:37.999"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.000" level="FAIL">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</msg>
<status status="FAIL" starttime="20191220 08:30:37.999" endtime="20191220 08:30:38.000"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:37.988" endtime="20191220 08:30:38.000" critical="yes">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</status>
</test>
<test id="s1-s1-t10" name="Get Table regression 1 columns">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/columns</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.002" endtime="20191220 08:30:38.009"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:38.010" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/regression+1/columns",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/columns",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:38.009039+00:00",
            "local": "2019-12-20T08:30:38.009039+10:00"
        }
    },
    "response": {
        "seconds": 0.004549,
        "status": 404,
        "body": "",
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:38 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:38.010" endtime="20191220 08:30:38.011"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.012" level="FAIL">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</msg>
<status status="FAIL" starttime="20191220 08:30:38.011" endtime="20191220 08:30:38.012"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.001" endtime="20191220 08:30:38.012" critical="yes">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</status>
</test>
<test id="s1-s1-t11" name="Get Table regression 1 row">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/row</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.013" endtime="20191220 08:30:38.020"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:38.020" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/regression+1/row",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/row",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:38.019471+00:00",
            "local": "2019-12-20T08:30:38.019471+10:00"
        }
    },
    "response": {
        "seconds": 0.004587,
        "status": 404,
        "body": "",
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:38 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:38.020" endtime="20191220 08:30:38.021"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.022" level="FAIL">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</msg>
<status status="FAIL" starttime="20191220 08:30:38.021" endtime="20191220 08:30:38.022"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.012" endtime="20191220 08:30:38.022" critical="yes">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</status>
</test>
<test id="s1-s1-t12" name="Delete Column Col_C">
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_C</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.023" endtime="20191220 08:30:38.033"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:38.033" level="INFO">
{
    "request": {
        "method": "DELETE",
        "url": "http://localhost/regression+1/Col_C",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_C",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:38.032371+00:00",
            "local": "2019-12-20T08:30:38.032371+10:00"
        }
    },
    "response": {
        "seconds": 0.007424,
        "status": 500,
        "body": {
            "path": "ParseResult(scheme='', netloc='', path='/regression+1/Col_C', params='', query='', fragment='')",
            "message": "Unsupported method"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:38 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:38.033" endtime="20191220 08:30:38.034"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.035" level="FAIL">500 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    500</msg>
<status status="FAIL" starttime="20191220 08:30:38.034" endtime="20191220 08:30:38.035"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.023" endtime="20191220 08:30:38.036" critical="yes">500 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    500</status>
</test>
<test id="s1-s1-t13" name="Get Column Col_A">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.036" endtime="20191220 08:30:38.044"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:38.044" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/regression+1/Col_A",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_A",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:38.043307+00:00",
            "local": "2019-12-20T08:30:38.043307+10:00"
        }
    },
    "response": {
        "seconds": 0.004938,
        "status": 404,
        "body": "",
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:38 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:38.044" endtime="20191220 08:30:38.046"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.047" level="FAIL">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</msg>
<status status="FAIL" starttime="20191220 08:30:38.046" endtime="20191220 08:30:38.047"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.036" endtime="20191220 08:30:38.047" critical="yes">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</status>
</test>
<test id="s1-s1-t14" name="Add value to Column Col_A">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A/Value+1</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.049" endtime="20191220 08:30:38.057"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:38.058" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1/Col_A/Value+1",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_A/Value+1",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:38.056727+00:00",
            "local": "2019-12-20T08:30:38.056727+10:00"
        }
    },
    "response": {
        "seconds": 0.004481,
        "status": 500,
        "body": {
            "path": "/regression+1/Col_A/Value+1",
            "message": "Unsupported method"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:38 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:38.057" endtime="20191220 08:30:38.059"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191220 08:30:38.060" level="FAIL">500 is not one of [201]

Failed validating 'enum' in schema:
    {'enum': [201], 'type': 'number'}

On instance:
    500</msg>
<status status="FAIL" starttime="20191220 08:30:38.059" endtime="20191220 08:30:38.060"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.048" endtime="20191220 08:30:38.060" critical="yes">500 is not one of [201]

Failed validating 'enum' in schema:
    {'enum': [201], 'type': 'number'}

On instance:
    500</status>
</test>
<test id="s1-s1-t15" name="Add more values to Column Col_A">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A/Value+2</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.061" endtime="20191220 08:30:38.067"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191220 08:30:38.069" level="FAIL">500 is not one of [201]

Failed validating 'enum' in schema:
    {'enum': [201], 'type': 'number'}

On instance:
    500</msg>
<status status="FAIL" starttime="20191220 08:30:38.068" endtime="20191220 08:30:38.069"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.061" endtime="20191220 08:30:38.069" critical="yes">500 is not one of [201]

Failed validating 'enum' in schema:
    {'enum': [201], 'type': 'number'}

On instance:
    500</status>
</test>
<test id="s1-s1-t16" name="Get all values for Column Col_A">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.070" endtime="20191220 08:30:38.079"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:38.080" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/regression+1/Col_A",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_A",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:38.078685+00:00",
            "local": "2019-12-20T08:30:38.078685+10:00"
        }
    },
    "response": {
        "seconds": 0.006429000000000001,
        "status": 404,
        "body": "",
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:38 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:38.079" endtime="20191220 08:30:38.081"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.082" level="FAIL">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</msg>
<status status="FAIL" starttime="20191220 08:30:38.081" endtime="20191220 08:30:38.082"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.069" endtime="20191220 08:30:38.082" critical="yes">404 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'number'}

On instance:
    404</status>
</test>
<test id="s1-s1-t17" name="Get value by id from Column Col_A">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A/${id}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.083" level="FAIL">Variable '${id}' not found.</msg>
<status status="FAIL" starttime="20191220 08:30:38.083" endtime="20191220 08:30:38.083"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.082" endtime="20191220 08:30:38.084" critical="yes">Variable '${id}' not found.</status>
</test>
<test id="s1-s1-t18" name="Delete Table regression 1">
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>/regression+1</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.084" endtime="20191220 08:30:38.099"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:38.100" level="INFO">
{
    "request": {
        "method": "DELETE",
        "url": "http://localhost/regression+1",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:38.098655+00:00",
            "local": "2019-12-20T08:30:38.098655+10:00"
        }
    },
    "response": {
        "seconds": 0.012421,
        "status": 200,
        "body": {
            "message": "table regression 1 deleted"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:38 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:38.099" endtime="20191220 08:30:38.101"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.101" endtime="20191220 08:30:38.101"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:38.084" endtime="20191220 08:30:38.101" critical="yes"></status>
</test>
<test id="s1-s1-t19" name="Table regression 1 removed">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/tables</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.102" endtime="20191220 08:30:38.110"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191220 08:30:38.111" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/tables",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/tables",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T22:30:38.109727+00:00",
            "local": "2019-12-20T08:30:38.109727+10:00"
        }
    },
    "response": {
        "seconds": 0.005193,
        "status": 200,
        "body": {
            "tables": [
                {
                    "id": 1,
                    "table": "Test"
                },
                {
                    "id": 2,
                    "table": "Test_2"
                }
            ]
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 22:30:38 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191220 08:30:38.110" endtime="20191220 08:30:38.112"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.112" endtime="20191220 08:30:38.113"></status>
</kw>
<kw name="Missing" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field does not exist.*</doc>
<arguments>
<arg>$.tables[?(@.table=="regression 1")]</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.113" endtime="20191220 08:30:38.136"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:38.102" endtime="20191220 08:30:38.136" critical="yes"></status>
</test>
<status status="FAIL" starttime="20191220 08:30:37.230" endtime="20191220 08:30:38.137"></status>
</suite>
<suite id="s1-s2" name="TestDataTable-API requests" source="/Users/dave/Documents/GitHub/TestDataTable/Regression_Tests/TestDataTable-API_requests.robot">
<kw name="Connect to TDT" type="setup">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>TDT</arg>
<arg>http://localhost</arg>
</arguments>
<msg timestamp="20191220 08:30:38.190" level="INFO">Creating Session using : alias=TDT, url=http://localhost, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20191220 08:30:38.189" endtime="20191220 08:30:38.190"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:38.189" endtime="20191220 08:30:38.190"></status>
</kw>
<test id="s1-s2-t1" name="Create Table regression 1">
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.191" level="INFO">PUT Request using : uri=/regression+1, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.198" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.190" endtime="20191220 08:30:38.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.199" level="INFO">&lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.198" endtime="20191220 08:30:38.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.199" level="INFO">{'message': 'table regression 1 created'}</msg>
<status status="PASS" starttime="20191220 08:30:38.199" endtime="20191220 08:30:38.199"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191220 08:30:38.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.200" endtime="20191220 08:30:38.200"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${resp.json()['message']}"</arg>
<arg>"table regression 1 created"</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.200" endtime="20191220 08:30:38.201"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:38.190" endtime="20191220 08:30:38.201" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Show Tables">
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/tables</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.201" level="INFO">GET Request using : uri=/tables, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.208" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.201" endtime="20191220 08:30:38.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.208" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.208" endtime="20191220 08:30:38.208"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.208" endtime="20191220 08:30:38.208"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:38.201" endtime="20191220 08:30:38.209" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Table regression 1 exists">
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/tables</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.209" level="INFO">GET Request using : uri=/tables, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.215" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.209" endtime="20191220 08:30:38.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.215" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.215" endtime="20191220 08:30:38.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.216" level="INFO">{'tables': [{'id': 1, 'table': 'Test'}, {'id': 2, 'table': 'Test_2'}, {'id': 64, 'table': 'regression 1'}]}</msg>
<status status="PASS" starttime="20191220 08:30:38.215" endtime="20191220 08:30:38.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.216" level="INFO">{"tables": [{"id": 1, "table": "Test"}, {"id": 2, "table": "Test_2"}, {"id": 64, "table": "regression 1"}]}</msg>
<status status="PASS" starttime="20191220 08:30:38.216" endtime="20191220 08:30:38.216"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.216" endtime="20191220 08:30:38.216"></status>
</kw>
<kw name="Output">
<arguments>
<arg>$.tables.[?(@.table=='regression 1')].id</arg>
</arguments>
<assign>
<var>${tbl_id}</var>
</assign>
<msg timestamp="20191220 08:30:38.218" level="FAIL">No keyword with name 'Output' found.</msg>
<status status="FAIL" starttime="20191220 08:30:38.218" endtime="20191220 08:30:38.218"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.209" endtime="20191220 08:30:38.218" critical="yes">No keyword with name 'Output' found.</status>
</test>
<test id="s1-s2-t4" name="Create Table regression 1 again">
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.219" level="INFO">PUT Request using : uri=/regression+1, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.225" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.219" endtime="20191220 08:30:38.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.225" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.225" endtime="20191220 08:30:38.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.225" level="INFO">{'message': 'table regression 1 exists'}</msg>
<status status="PASS" starttime="20191220 08:30:38.225" endtime="20191220 08:30:38.225"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.225" endtime="20191220 08:30:38.226"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${resp.json()['message']}"</arg>
<arg>"table regression 1 exists"</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.226" endtime="20191220 08:30:38.226"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/tables</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.226" level="INFO">GET Request using : uri=/tables, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.232" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.226" endtime="20191220 08:30:38.232"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.232" endtime="20191220 08:30:38.233"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${text}</var>
</assign>
<msg timestamp="20191220 08:30:38.233" level="INFO">${text} = {"tables": [{"id": 1, "table": "Test"}, {"id": 2, "table": "Test_2"}, {"id": 64, "table": "regression 1"}]}</msg>
<status status="PASS" starttime="20191220 08:30:38.233" endtime="20191220 08:30:38.233"></status>
</kw>
<kw name="Select Elements" library="JsonValidator">
<doc>Return list of elements from _json_source_, matching [ http://jsonselect.org/ | JSONSelect] expression.</doc>
<arguments>
<arg>${text}</arg>
<arg>.table:contains("regression 1")~.table</arg>
</arguments>
<assign>
<var>${tbl_name}</var>
</assign>
<msg timestamp="20191220 08:30:38.234" level="INFO">${tbl_name} = ['regression 1']</msg>
<status status="PASS" starttime="20191220 08:30:38.233" endtime="20191220 08:30:38.234"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${tbl_name[0]}"</arg>
<arg>"regression 1"</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.234" endtime="20191220 08:30:38.234"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:38.218" endtime="20191220 08:30:38.234" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Create Column Col_A">
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1/Col_A</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.235" level="INFO">PUT Request using : uri=/regression+1/Col_A, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.244" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.235" endtime="20191220 08:30:38.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.244" level="INFO">&lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.244" endtime="20191220 08:30:38.244"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191220 08:30:38.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.245" endtime="20191220 08:30:38.245"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${resp.json()['message']}"</arg>
<arg>"column Col_A created"</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.245" endtime="20191220 08:30:38.245"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:38.234" endtime="20191220 08:30:38.245" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Create Column Col_A again">
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1/Col_A</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.246" level="INFO">PUT Request using : uri=/regression+1/Col_A, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.254" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.246" endtime="20191220 08:30:38.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.255" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.255" endtime="20191220 08:30:38.255"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.255" endtime="20191220 08:30:38.255"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${resp.json()['message']}"</arg>
<arg>"column Col_A exists"</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.255" endtime="20191220 08:30:38.256"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:38.246" endtime="20191220 08:30:38.256" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Create Column Col_B and Col_C">
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1/Col_B</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.257" level="INFO">PUT Request using : uri=/regression+1/Col_B, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.268" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.257" endtime="20191220 08:30:38.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.269" level="INFO">&lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.269" endtime="20191220 08:30:38.269"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191220 08:30:38.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.269" endtime="20191220 08:30:38.270"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1/Col_C</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.270" level="INFO">PUT Request using : uri=/regression+1/Col_C, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.282" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.270" endtime="20191220 08:30:38.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.282" level="INFO">&lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.282" endtime="20191220 08:30:38.282"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191220 08:30:38.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.283" endtime="20191220 08:30:38.283"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:38.256" endtime="20191220 08:30:38.283" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Post row of data">
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1/row</arg>
<arg>{"Col_A":"Value A","Col_B":"Value B","Col_C":"Value C"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.284" level="INFO">POST Request using : uri=/regression+1/row, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.289" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.284" endtime="20191220 08:30:38.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.290" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.289" endtime="20191220 08:30:38.290"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191220 08:30:38.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191220 08:30:38.290" level="FAIL">200 != 201</msg>
<status status="FAIL" starttime="20191220 08:30:38.290" endtime="20191220 08:30:38.290"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.283" endtime="20191220 08:30:38.291" critical="yes">200 != 201</status>
</test>
<test id="s1-s2-t9" name="Get Table regression 1">
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.291" level="INFO">GET Request using : uri=/regression+1, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.298" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.291" endtime="20191220 08:30:38.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.299" level="INFO">&lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.298" endtime="20191220 08:30:38.299"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191220 08:30:38.299" level="FAIL">404 != 200</msg>
<status status="FAIL" starttime="20191220 08:30:38.299" endtime="20191220 08:30:38.299"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.291" endtime="20191220 08:30:38.300" critical="yes">404 != 200</status>
</test>
<test id="s1-s2-t10" name="Get Table regression 1 columns">
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1/columns</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.300" level="INFO">GET Request using : uri=/regression+1/columns, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.308" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.300" endtime="20191220 08:30:38.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.308" level="INFO">&lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.308" endtime="20191220 08:30:38.308"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191220 08:30:38.309" level="FAIL">404 != 200</msg>
<status status="FAIL" starttime="20191220 08:30:38.309" endtime="20191220 08:30:38.309"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.300" endtime="20191220 08:30:38.309" critical="yes">404 != 200</status>
</test>
<test id="s1-s2-t11" name="Get Table regression 1 row">
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1/row</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.310" level="INFO">GET Request using : uri=/regression+1/row, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.317" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.310" endtime="20191220 08:30:38.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.318" level="INFO">&lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.318" endtime="20191220 08:30:38.318"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191220 08:30:38.319" level="FAIL">404 != 200</msg>
<status status="FAIL" starttime="20191220 08:30:38.318" endtime="20191220 08:30:38.319"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.310" endtime="20191220 08:30:38.319" critical="yes">404 != 200</status>
</test>
<test id="s1-s2-t12" name="Delete Column Col_C">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1/Col_C</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.319" level="INFO">DELETE Request using : uri=/regression+1/Col_C, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.329" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.319" endtime="20191220 08:30:38.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.329" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.329" endtime="20191220 08:30:38.329"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191220 08:30:38.330" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20191220 08:30:38.329" endtime="20191220 08:30:38.330"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.319" endtime="20191220 08:30:38.330" critical="yes">500 != 200</status>
</test>
<test id="s1-s2-t13" name="Get Column Col_A">
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1/Col_A</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.331" level="INFO">GET Request using : uri=/regression+1/Col_A, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.338" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.331" endtime="20191220 08:30:38.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.338" level="INFO">&lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.338" endtime="20191220 08:30:38.338"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191220 08:30:38.339" level="FAIL">404 != 200</msg>
<status status="FAIL" starttime="20191220 08:30:38.338" endtime="20191220 08:30:38.339"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.331" endtime="20191220 08:30:38.339" critical="yes">404 != 200</status>
</test>
<test id="s1-s2-t14" name="Add value to Column Col_A">
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1/Col_A/Value+1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.340" level="INFO">PUT Request using : uri=/regression+1/Col_A/Value+1, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.345" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.340" endtime="20191220 08:30:38.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.346" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.345" endtime="20191220 08:30:38.346"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191220 08:30:38.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191220 08:30:38.346" level="FAIL">500 != 201</msg>
<status status="FAIL" starttime="20191220 08:30:38.346" endtime="20191220 08:30:38.346"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.339" endtime="20191220 08:30:38.346" critical="yes">500 != 201</status>
</test>
<test id="s1-s2-t15" name="Add more values to Column Col_A">
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1/Col_A/Value+2</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.348" level="INFO">PUT Request using : uri=/regression+1/Col_A/Value+2, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.352" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.347" endtime="20191220 08:30:38.352"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191220 08:30:38.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191220 08:30:38.353" level="FAIL">500 != 201</msg>
<status status="FAIL" starttime="20191220 08:30:38.352" endtime="20191220 08:30:38.353"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.347" endtime="20191220 08:30:38.353" critical="yes">500 != 201</status>
</test>
<test id="s1-s2-t16" name="Get all values for Column Col_A">
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1/Col_A</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.354" level="INFO">GET Request using : uri=/regression+1/Col_A, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.363" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.354" endtime="20191220 08:30:38.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.364" level="INFO">&lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.363" endtime="20191220 08:30:38.364"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191220 08:30:38.365" level="FAIL">404 != 200</msg>
<status status="FAIL" starttime="20191220 08:30:38.364" endtime="20191220 08:30:38.365"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.353" endtime="20191220 08:30:38.365" critical="yes">404 != 200</status>
</test>
<test id="s1-s2-t17" name="Get value by id from Column Col_A">
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1/Col_A/${id}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.366" level="FAIL">Variable '${id}' not found.</msg>
<status status="FAIL" starttime="20191220 08:30:38.366" endtime="20191220 08:30:38.367"></status>
</kw>
<status status="FAIL" starttime="20191220 08:30:38.365" endtime="20191220 08:30:38.367" critical="yes">Variable '${id}' not found.</status>
</test>
<test id="s1-s2-t18" name="Delete Table regression 1">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/regression+1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.368" level="INFO">DELETE Request using : uri=/regression+1, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.384" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.367" endtime="20191220 08:30:38.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.384" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.384" endtime="20191220 08:30:38.384"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.384" endtime="20191220 08:30:38.385"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:38.367" endtime="20191220 08:30:38.385" critical="yes"></status>
</test>
<test id="s1-s2-t19" name="Table regression 1 removed">
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>TDT</arg>
<arg>/tables</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20191220 08:30:38.386" level="INFO">GET Request using : uri=/tables, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20191220 08:30:38.393" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.386" endtime="20191220 08:30:38.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20191220 08:30:38.394" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.393" endtime="20191220 08:30:38.394"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191220 08:30:38.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191220 08:30:38.394" endtime="20191220 08:30:38.394"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${text}</var>
</assign>
<msg timestamp="20191220 08:30:38.394" level="INFO">${text} = {"tables": [{"id": 1, "table": "Test"}, {"id": 2, "table": "Test_2"}]}</msg>
<status status="PASS" starttime="20191220 08:30:38.394" endtime="20191220 08:30:38.394"></status>
</kw>
<kw name="Select Elements" library="JsonValidator">
<doc>Return list of elements from _json_source_, matching [ http://jsonselect.org/ | JSONSelect] expression.</doc>
<arguments>
<arg>${text}</arg>
<arg>.table:contains("regression 1")~.table</arg>
</arguments>
<assign>
<var>${tbl_name}</var>
</assign>
<msg timestamp="20191220 08:30:38.395" level="INFO">${tbl_name} = None</msg>
<status status="PASS" starttime="20191220 08:30:38.394" endtime="20191220 08:30:38.395"></status>
</kw>
<kw name="Element Should Not Exist" library="JsonValidator">
<doc>Check that one or more elements, matching [ http://jsonselect.org/ | JSONSelect] expression, don't exist.</doc>
<arguments>
<arg>${text}</arg>
<arg>.table:contains("regression 1")</arg>
</arguments>
<status status="PASS" starttime="20191220 08:30:38.395" endtime="20191220 08:30:38.395"></status>
</kw>
<status status="PASS" starttime="20191220 08:30:38.385" endtime="20191220 08:30:38.396" critical="yes"></status>
</test>
<status status="FAIL" starttime="20191220 08:30:38.139" endtime="20191220 08:30:38.396"></status>
</suite>
<status status="FAIL" starttime="20191220 08:30:37.209" endtime="20191220 08:30:38.398"></status>
</suite>
<statistics>
<total>
<stat pass="17" fail="21">Critical Tests</stat>
<stat pass="17" fail="21">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="17" fail="21" id="s1" name="TestDataTable-API REST &amp; TestDataTable-API requests">TestDataTable-API REST &amp; TestDataTable-API requests</stat>
<stat pass="9" fail="10" id="s1-s1" name="TestDataTable-API REST">TestDataTable-API REST &amp; TestDataTable-API requests.TestDataTable-API REST</stat>
<stat pass="8" fail="11" id="s1-s2" name="TestDataTable-API requests">TestDataTable-API REST &amp; TestDataTable-API requests.TestDataTable-API requests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
