<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on darwin)" generated="20191219 17:17:09.099" rpa="false">
<suite id="s1" name="TestDataTable-API" source="/Users/dave/Documents/GitHub/TestDataTable/Regression_Tests/TestDataTable-API.robot">
<test id="s1-t1" name="Create Table regression 1">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.363" endtime="20191219 17:17:09.406"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 17:17:09.407" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T07:17:09.374734+00:00",
            "local": "2019-12-19T17:17:09.374734+10:00"
        }
    },
    "response": {
        "seconds": 0.005465,
        "status": 201,
        "body": {
            "message": "table regression 1 created"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 07:17:09 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 17:17:09.406" endtime="20191219 17:17:09.414"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.414" endtime="20191219 17:17:09.416"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.message</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20191219 17:17:09.444" level="INFO">
"table regression 1 created"</msg>
<msg timestamp="20191219 17:17:09.444" level="INFO">${msg} = table regression 1 created</msg>
<status status="PASS" starttime="20191219 17:17:09.416" endtime="20191219 17:17:09.444"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${msg}"</arg>
<arg>"table regression 1 created"</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.444" endtime="20191219 17:17:09.445"></status>
</kw>
<status status="PASS" starttime="20191219 17:17:09.362" endtime="20191219 17:17:09.445" critical="yes"></status>
</test>
<test id="s1-t2" name="Show Tables">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/tables</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.445" endtime="20191219 17:17:09.452"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 17:17:09.453" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/tables",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/tables",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T07:17:09.451538+00:00",
            "local": "2019-12-19T17:17:09.451538+10:00"
        }
    },
    "response": {
        "seconds": 0.004086,
        "status": 200,
        "body": {
            "tables": [
                {
                    "id": 1,
                    "table": "Test"
                },
                {
                    "id": 2,
                    "table": "Test_2"
                },
                {
                    "id": 8,
                    "table": "regression 1"
                }
            ]
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 07:17:09 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 17:17:09.452" endtime="20191219 17:17:09.454"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.454" endtime="20191219 17:17:09.455"></status>
</kw>
<status status="PASS" starttime="20191219 17:17:09.445" endtime="20191219 17:17:09.455" critical="yes"></status>
</test>
<test id="s1-t3" name="Table regression 1 exists">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/tables</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.455" endtime="20191219 17:17:09.461"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 17:17:09.462" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/tables",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/tables",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T07:17:09.460669+00:00",
            "local": "2019-12-19T17:17:09.460669+10:00"
        }
    },
    "response": {
        "seconds": 0.003274,
        "status": 200,
        "body": {
            "tables": [
                {
                    "id": 1,
                    "table": "Test"
                },
                {
                    "id": 2,
                    "table": "Test_2"
                },
                {
                    "id": 8,
                    "table": "regression 1"
                }
            ]
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 07:17:09 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 17:17:09.461" endtime="20191219 17:17:09.463"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.463" endtime="20191219 17:17:09.463"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.tables[?(@.table=="regression 1")].id</arg>
</arguments>
<assign>
<var>${tbl_id}</var>
</assign>
<msg timestamp="20191219 17:17:09.485" level="INFO">
8</msg>
<msg timestamp="20191219 17:17:09.485" level="INFO">${tbl_id} = 8</msg>
<status status="PASS" starttime="20191219 17:17:09.464" endtime="20191219 17:17:09.485"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.tables[?(@.table=="regression 1")].table</arg>
</arguments>
<assign>
<var>${tbl_name}</var>
</assign>
<msg timestamp="20191219 17:17:09.507" level="INFO">
"regression 1"</msg>
<msg timestamp="20191219 17:17:09.507" level="INFO">${tbl_name} = regression 1</msg>
<status status="PASS" starttime="20191219 17:17:09.485" endtime="20191219 17:17:09.507"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${tbl_name}"</arg>
<arg>"regression 1"</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.507" endtime="20191219 17:17:09.507"></status>
</kw>
<status status="PASS" starttime="20191219 17:17:09.455" endtime="20191219 17:17:09.508" critical="yes"></status>
</test>
<test id="s1-t4" name="Create Table regression 1 again">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.508" endtime="20191219 17:17:09.515"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 17:17:09.516" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T07:17:09.514732+00:00",
            "local": "2019-12-19T17:17:09.514732+10:00"
        }
    },
    "response": {
        "seconds": 0.00487,
        "status": 200,
        "body": {
            "message": "table regression 1 exists"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 07:17:09 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 17:17:09.515" endtime="20191219 17:17:09.517"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.517" endtime="20191219 17:17:09.517"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.message</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20191219 17:17:09.539" level="INFO">
"table regression 1 exists"</msg>
<msg timestamp="20191219 17:17:09.539" level="INFO">${msg} = table regression 1 exists</msg>
<status status="PASS" starttime="20191219 17:17:09.517" endtime="20191219 17:17:09.539"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${msg}"</arg>
<arg>"table regression 1 exists"</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.539" endtime="20191219 17:17:09.540"></status>
</kw>
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/tables</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.540" endtime="20191219 17:17:09.545"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.545" endtime="20191219 17:17:09.546"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.tables[?(@.table=="regression 1")].table</arg>
</arguments>
<assign>
<var>${tbl_name}</var>
</assign>
<msg timestamp="20191219 17:17:09.568" level="INFO">
"regression 1"</msg>
<msg timestamp="20191219 17:17:09.568" level="INFO">${tbl_name} = regression 1</msg>
<status status="PASS" starttime="20191219 17:17:09.546" endtime="20191219 17:17:09.568"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${tbl_name}"</arg>
<arg>"regression 1"</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.568" endtime="20191219 17:17:09.568"></status>
</kw>
<status status="PASS" starttime="20191219 17:17:09.508" endtime="20191219 17:17:09.569" critical="yes"></status>
</test>
<test id="s1-t5" name="Create Column Col_A">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.569" endtime="20191219 17:17:09.579"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 17:17:09.580" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1/Col_A",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_A",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T07:17:09.578795+00:00",
            "local": "2019-12-19T17:17:09.578795+10:00"
        }
    },
    "response": {
        "seconds": 0.007863,
        "status": 201,
        "body": {
            "message": "column Col_A created"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 07:17:09 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 17:17:09.580" endtime="20191219 17:17:09.581"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.582" endtime="20191219 17:17:09.582"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.message</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20191219 17:17:09.607" level="INFO">
"column Col_A created"</msg>
<msg timestamp="20191219 17:17:09.607" level="INFO">${msg} = column Col_A created</msg>
<status status="PASS" starttime="20191219 17:17:09.582" endtime="20191219 17:17:09.607"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${msg}"</arg>
<arg>"column Col_A created"</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.607" endtime="20191219 17:17:09.608"></status>
</kw>
<status status="PASS" starttime="20191219 17:17:09.569" endtime="20191219 17:17:09.608" critical="yes"></status>
</test>
<test id="s1-t6" name="Create Column Col_A again">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/regression+1/Col_A</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.608" endtime="20191219 17:17:09.617"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 17:17:09.617" level="INFO">
{
    "request": {
        "method": "PUT",
        "url": "http://localhost/regression+1/Col_A",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1/Col_A",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T07:17:09.616536+00:00",
            "local": "2019-12-19T17:17:09.616536+10:00"
        }
    },
    "response": {
        "seconds": 0.006063,
        "status": 200,
        "body": {
            "message": "column Col_A exists"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 07:17:09 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 17:17:09.617" endtime="20191219 17:17:09.618"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.618" endtime="20191219 17:17:09.619"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$.message</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20191219 17:17:09.641" level="INFO">
"column Col_A exists"</msg>
<msg timestamp="20191219 17:17:09.641" level="INFO">${msg} = column Col_A exists</msg>
<status status="PASS" starttime="20191219 17:17:09.619" endtime="20191219 17:17:09.641"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>"${msg}"</arg>
<arg>"column Col_A exists"</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.641" endtime="20191219 17:17:09.642"></status>
</kw>
<status status="PASS" starttime="20191219 17:17:09.608" endtime="20191219 17:17:09.642" critical="yes"></status>
</test>
<test id="s1-t7" name="Delete Table regression 1">
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>/regression+1</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.642" endtime="20191219 17:17:09.655"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 17:17:09.656" level="INFO">
{
    "request": {
        "method": "DELETE",
        "url": "http://localhost/regression+1",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/regression+1",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T07:17:09.654661+00:00",
            "local": "2019-12-19T17:17:09.654661+10:00"
        }
    },
    "response": {
        "seconds": 0.010372,
        "status": 200,
        "body": {
            "message": "table regression 1 deleted"
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 07:17:09 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 17:17:09.655" endtime="20191219 17:17:09.657"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.657" endtime="20191219 17:17:09.657"></status>
</kw>
<status status="PASS" starttime="20191219 17:17:09.642" endtime="20191219 17:17:09.657" critical="yes"></status>
</test>
<test id="s1-t8" name="Table regression 1 removed">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/tables</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.658" endtime="20191219 17:17:09.663"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20191219 17:17:09.664" level="INFO">
{
    "request": {
        "method": "GET",
        "url": "http://localhost/tables",
        "scheme": "http",
        "netloc": "localhost",
        "path": "/tables",
        "query": {},
        "body": null,
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.2"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": true,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2019-12-19T07:17:09.662509+00:00",
            "local": "2019-12-19T17:17:09.662509+10:00"
        }
    },
    "response": {
        "seconds": 0.002987,
        "status": 200,
        "body": {
            "tables": [
                {
                    "id": 1,
                    "table": "Test"
                },
                {
                    "id": 2,
                    "table": "Test_2"
                }
            ]
        },
        "headers": {
            "Server": "BaseHTTP/0.6 Python/3.7.4",
            "Date": "Thu, 19 Dec 2019 07:17:09 GMT"
        }
    }
}</msg>
<status status="PASS" starttime="20191219 17:17:09.663" endtime="20191219 17:17:09.665"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.665" endtime="20191219 17:17:09.666"></status>
</kw>
<kw name="Missing" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field does not exist.*</doc>
<arguments>
<arg>$.tables[?(@.table=="regression 1")]</arg>
</arguments>
<status status="PASS" starttime="20191219 17:17:09.666" endtime="20191219 17:17:09.689"></status>
</kw>
<status status="PASS" starttime="20191219 17:17:09.657" endtime="20191219 17:17:09.689" critical="yes"></status>
</test>
<status status="PASS" starttime="20191219 17:17:09.100" endtime="20191219 17:17:09.690"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="TestDataTable-API">TestDataTable-API</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
